# Git settings
git_install_from_source: yes
git_prefix: "/usr/local"
git_version: "2.2.0"

git_install_server: no
git_server_base_path: "/srv/git"
git_server_export_all: yes

# Python Settings
python_enabled: yes # The role is enabled
python_ppa: ppa:fkrull/deadsnakes # Python PPA
python_version: 3.4 # Set version (2.6, 2.7, 3.3, 3.4)
python_pip_executable: pip{{python_version}}
python_pip_latest: # Update python packages
- setuptools
- virtualenv

# Postgres Settings.
postgresql_databases:
  - name: "{{cookiecutter.database_name}}"
    hstore: no  # flag to install the hstore extension on this database (yes/no)
    uuid_ossp: no  # flag to install the uuid-ossp extension on this database (yes/no)
  - name: "test_{{cookiecutter.database_name}}"
    hstore: no  # flag to install the hstore extension on this database (yes/no)
    uuid_ossp: no  # flag to install the uuid-ossp extension on this database (yes/no)

# List of users to be created (optional)
postgresql_users:
  - name: "{{cookiecutter.database_user}}"
    pass: "{{cookiecutter.database_password}}"
    encrypted: no  # denotes if the password is already encrypted.

# List of user privileges to be applied (optional)
postgresql_user_privileges:
  - name: "{{cookiecutter.database_user}}"  # user name
    db: "{{cookiecutter.database_name}}"  # database
    priv: 'ALL'  # privilege string format: example: INSERT,UPDATE/table:SELECT/anothertable:ALL
  - name: "{{cookiecutter.database_user}}"
    db: "test_{{cookiecutter.database_name}}"
    priv: 'ALL'

# Node JS Settings
nodejs_install_method: "source"     # "package" or "source"
nodejs_version: "0.10.33"           # nodejs version to install.

# Rbenv Settings
rbenv:
  env: user
  version: v0.4.0
  ruby_version: 2.1.5

rbenv_plugins:
  - { name: "rbenv-vars",         repo: "git://github.com/sstephenson/rbenv-vars.git",         version: "v1.2.0" }
  - { name: "ruby-build",         repo: "git://github.com/sstephenson/ruby-build.git",         version: "v20141113" }
  - { name: "rbenv-default-gems", repo: "git://github.com/sstephenson/rbenv-default-gems.git", version: "v1.0.0" }
  - { name: "rbenv-installer",    repo: "git://github.com/fesplugas/rbenv-installer.git",      version: "22cc96aa45d06faca5958b1aa1688596198407a3" }
  - { name: "rbenv-update",       repo: "git://github.com/rkh/rbenv-update.git",               version: "f0ff6e3264c45fdf2a8064205db6c8b3a707894e" }
  - { name: "rbenv-whatis",       repo: "git://github.com/rkh/rbenv-whatis.git",               version: "v1.0.0" }
  - { name: "rbenv-use",          repo: "git://github.com/rkh/rbenv-use.git",                  version: "v1.0.0" }
  - { name: "rbenv-gem-rehash",   repo: "git://github.com/sstephenson/rbenv-gem-rehash",       version: "v1.0.0" }

rbenv_users:
  - {
    name: "vagrant",
    home: "/home/vagrant",
    comment: "Vagrant User"
  }

default_gems_file: "../ansible-playbooks/playbooks/python-vagrant/roles/python-vagrant/files/default-gems"

# Virtualenvwrapper Settings
virtualenvwrapper_shell_rc_file: "/home/vagrant/.bashrc"
virtualenvwrapper_venvs_home: "/home/vagrant/.virtualenvs"
virtualenvwrapper_venvs_python: "/usr/bin/python3.4"
